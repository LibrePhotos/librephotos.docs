"use strict";(self.webpackChunklibrephotos_docs=self.webpackChunklibrephotos_docs||[]).push([[8839],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>b});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),p=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(r),m=o,b=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return r?n.createElement(b,i(i({ref:t},u),{},{components:r})):n.createElement(b,i({ref:t},u))}));function b(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},4931:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var n=r(7462),o=(r(7294),r(3905));const a={title:"\ud83d\ude80 Single Container Deployment",excerpt:"Simplified single-container deployment with internal or external database",sidebar_position:2},i=void 0,l={unversionedId:"installation/unified-deployment",id:"installation/unified-deployment",title:"\ud83d\ude80 Single Container Deployment",description:"Overview",source:"@site/docs/installation/unified-deployment.md",sourceDirName:"installation",slug:"/installation/unified-deployment",permalink:"/docs/installation/unified-deployment",draft:!1,editUrl:"https://github.com/LibrePhotos/librephotos.docs/tree/master/docs/installation/unified-deployment.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"\ud83d\ude80 Single Container Deployment",excerpt:"Simplified single-container deployment with internal or external database",sidebar_position:2},sidebar:"userguide",previous:{title:"Installation",permalink:"/docs/installation/"},next:{title:"\ud83d\udc0b Standard Docker Setup",permalink:"/docs/installation/standard-install"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"\ud83d\udc0b Option 1: All-in-One (SQLite Database)",id:"-option-1-all-in-one-sqlite-database",level:2},{value:"Quick Start",id:"quick-start",level:3},{value:"\ud83d\uddc4\ufe0f Option 2: External PostgreSQL Database",id:"\ufe0f-option-2-external-postgresql-database",level:2},{value:"1. PostgreSQL Setup",id:"1-postgresql-setup",level:3},{value:"2. LibrePhotos Container",id:"2-librephotos-container",level:3}],u={toc:p},d="wrapper";function c(e){let{components:t,...r}=e;return(0,o.kt)(d,(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"overview"},"Overview"),(0,o.kt)("p",null,"Single container deployment serves both the LibrePhotos API and frontend from one unified container. Choose between internal database (SQLite) or external PostgreSQL."),(0,o.kt)("h2",{id:"-option-1-all-in-one-sqlite-database"},"\ud83d\udc0b Option 1: All-in-One (SQLite Database)"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Best for: Simple home servers, quick testing, first-time users")),(0,o.kt)("h3",{id:"quick-start"},"Quick Start"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Create directories for data")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"mkdir -p /home/yourusername/librephotos/{db,protected_media,logs}\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Start LibrePhotos")),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -d \\\n  --name librephotos \\\n  --restart unless-stopped \\\n  -p 3000:8001 \\\n  -v /home/yourusername/librephotos/db:/db \\\n  -v /home/yourusername/librephotos/protected_media:/protected_media \\\n  -v /home/yourusername/librephotos/logs:/logs \\\n  -v /path/to/your/photos:/data \\\n  -e SERVE_FRONTEND=true \\\n  -e DB_BACKEND=sqlite \\\n  reallibrephotos/librephotos-unified:latest\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Access"),": ",(0,o.kt)("a",{parentName:"p",href:"http://localhost:3000"},"http://localhost:3000")))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Notes:")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Secret key"),": Optional - if not provided, one will be generated and saved to ",(0,o.kt)("inlineCode",{parentName:"li"},"/logs/secret_key.txt")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Database"),": SQLite file will be created automatically in the ",(0,o.kt)("inlineCode",{parentName:"li"},"/db")," directory"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Photos"),": Mount your photo directory as read-only if preferred: ",(0,o.kt)("inlineCode",{parentName:"li"},"-v /path/to/photos:/data:ro"))),(0,o.kt)("h2",{id:"\ufe0f-option-2-external-postgresql-database"},"\ud83d\uddc4\ufe0f Option 2: External PostgreSQL Database"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Best for: Cloud deployments, existing PostgreSQL, production setups")),(0,o.kt)("h3",{id:"1-postgresql-setup"},"1. PostgreSQL Setup"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Existing PostgreSQL:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE DATABASE librephotos;\nCREATE USER librephotos_user WITH PASSWORD 'your_secure_password';\nGRANT ALL PRIVILEGES ON DATABASE librephotos TO librephotos_user;\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"New PostgreSQL container:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -d \\\n  --name librephotos-db \\\n  --restart unless-stopped \\\n  -p 5432:5432 \\\n  -e POSTGRES_DB=librephotos \\\n  -e POSTGRES_USER=librephotos_user \\\n  -e POSTGRES_PASSWORD=your_secure_password \\\n  -v /home/yourusername/postgres_data:/var/lib/postgresql/data \\\n  postgres:17\n")),(0,o.kt)("h3",{id:"2-librephotos-container"},"2. LibrePhotos Container"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo docker run -d \\\n  --name librephotos \\\n  --restart unless-stopped \\\n  -p 3000:8001 \\\n  -v /home/yourusername/librephotos/protected_media:/protected_media \\\n  -v /home/yourusername/librephotos/logs:/logs \\\n  -v /path/to/your/photos:/data \\\n  -e SERVE_FRONTEND=true \\\n  -e DB_BACKEND=postgresql \\\n  -e DB_NAME=librephotos \\\n  -e DB_USER=librephotos_user \\\n  -e DB_PASS=your_secure_password \\\n  -e DB_HOST=localhost \\\n  -e DB_PORT=5432 \\\n  reallibrephotos/librephotos-unified:latest\n")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Next:")," ",(0,o.kt)("a",{parentName:"p",href:"/docs/user-guide/first-steps"},"First Steps")," to configure photo scanning and features."))}c.isMDXComponent=!0}}]);